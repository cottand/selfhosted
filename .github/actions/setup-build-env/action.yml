name: 'Setup build environment'
description: 'Sets up an environment with Nix and attic caching. Requires having run checkout'
inputs:
  tailscale_oauth_clientsecret:
    description: 'Tailscale oauth client secret'
    required: true
  caCertificate:
    description: 'Base64 encoded CA certificate the server certificate was signed with. Defaults to CAs provided by Mozilla'
    required: false
  aarch64LinuxSupport:
    description: 'Enable aarch64-linux support via QEMU'
    default: 'false'
    required: false
#outputs:
#  random-number:
#    description: "Random number"
#    value: ${{ steps.random-number-generator.outputs.random-number }}
runs:
  using: "composite"
  steps:
    - name: Setup Tailscale
      uses: tailscale/github-action@main
      with:
        oauth-client-id: 'k13HPkibx421CNTRL'
        oauth-secret: ${{ inputs.tailscale_oauth_clientsecret }}
        tags: 'tag:ci-gha'


    - name: Import Secrets
      id: secrets
      uses: hashicorp/vault-action@v2
      with:
        url: https://vault.dcotta.com:8200
        role: actions-ro
        path: jwt-github
        method: jwt
        jwtGithubAudience: sigstore
        caCertificate: ${{ inputs.caCertificate }}
        secrets: |
          secret/data/nomad/job/attic/users/github-actions value | ATTIC_TOKEN ;

    - name: Add 2024 CA
      shell: bash
      run: |
        sudo apt-get install -y ca-certificates
        sudo cp certs/root_2024_ca.crt /usr/local/share/ca-certificates
        sudo update-ca-certificates

    - name: Set up QEMU for aarch64 support
      uses: docker/setup-qemu-action@v1
      if: inputs.aarch64LinuxSupport

    - uses: cachix/install-nix-action@v22
      with:
        github_access_token: '${{ github.token }}'
        extra_nix_config: |
          ${{ inputs.aarch64LinuxSupport && 'extra-platforms = aarch64-linux' || '' }}

    - name: Install Attic and nix-fast-build
      shell: bash
      run: |
        nix profile install nixpkgs#attic-client github:Mic92/nix-fast-build/8e7c9d7

    - name: Configure Attic
      shell: bash
      run: |
        attic login --set-default central "$ATTIC_SERVER" "$ATTIC_TOKEN"
        attic use "$ATTIC_CACHE"
      env:
        ATTIC_TOKEN: ${{ steps.secrets.outputs.ATTIC_TOKEN }}